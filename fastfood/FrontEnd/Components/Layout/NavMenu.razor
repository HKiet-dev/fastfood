@using FrontEnd.Helper
@using FrontEnd.Services.IService
@using Microsoft.AspNetCore.Components.Authorization
@using System.IdentityModel.Tokens.Jwt
@inject NavigationManager Navigation
<nav class="navbar navbar-expand-lg navbar-dark bg-info shadow-sm p-3 mb-5 bg-body-tertiary rounded">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">FastFood</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" >
                        Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="menu" >
                         Menu
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="about">
                         About
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="contact" >
                         Contact
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="purchasehistory">
                        Lịch sử mua hàng
                    </NavLink>
                </li>
            </ul>
        </div>
    </div>
    <div class="container-fluid">
        <form class="d-flex" role="search">
            <input class="form-control me-2 rounded-3" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-outline-success mx-0" type="submit">Search</button>
        </form>
        <div>
            <NavLink class="nav-link mx-3" href="cart" Match="NavLinkMatch.All">
                <i class="bi bi-basket fs-6"></i>
                <span class="mx-2 fs-6">Giỏ Hàng</span>
            </NavLink>

        </div>
        @* <div>
            <NavLink class="nav-link" href="infomation" Match="NavLinkMatch.All">
                <i class="bi bi-person fs-6"></i>
                <span class="mx-2 fs-6">Hồ Sơ</span>
            </NavLink>
        </div> *@
        <div>
            @* <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                <Authorized>
                    <div class="btn-group">
                        <NavLink class="nav-link ms-2" href="infomation">
                            <span class="btn btn-outline-warning text-white border-white">hi, @userName</span>
                        </NavLink>
                        <NavLink class="nav-link ms-2" href="signout">
                            <button class="btn btn-outline-secondary"><i class="bi bi-box-arrow-left"></i> Đăng xuất</button>
                        </NavLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                        <i class="bi bi-person fs-6"></i>
                        <span class="mx-2 fs-6">Đăng kí/Đăng nhập</span>
                    </NavLink>
                </NotAuthorized>
            </Microsoft.AspNetCore.Components.Authorization.AuthorizeView> *@
            <AuthorizeView>
                <Authorized>
                    <div class="btn-group">
                        <NavLink class="nav-link btn btn-outline-white ms-2" href="infomation">
                            @{
                                var nameClaim = context.User.Claims.FirstOrDefault(c => c.Type == JwtRegisteredClaimNames.Name)?.Value;
                            }
                            <span class="btn btn-outline-warning text-white border-white">hi, @nameClaim</span>
                        </NavLink>
                        <button type="button" class="btn btn-primary" @onclick="TryLogout">Logout</button>
                    </div>
                </Authorized>
                <Authorizing>
                    Authorizing in process...
                </Authorizing>
                <NotAuthorized>
                    <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                        <i class="bi bi-person fs-6"></i>
                        <span class="mx-2 fs-6">Đăng kí/Đăng nhập</span>
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>


    </div>
</nav>

@code
{
    [Inject]
    CustomAuthenticationStateProvider AuthenticationStateProvider { get; set; }

    private string userName;
    private string userId;
    private string token;


    // protected override async Task OnInitializedAsync()
    // {
    //     token = await AuthenticationStateProvider.GetTokenAsync();

    //     if (token != null)
    //     {
    //         var handler = new JwtSecurityTokenHandler();
    //         var jwt = handler.ReadJwtToken(token);

    //         userName = jwt.Claims.FirstOrDefault(u => u.Type == JwtRegisteredClaimNames.Name)?.Value;
    //         userId = jwt.Claims.FirstOrDefault(u => u.Type == JwtRegisteredClaimNames.Sub)?.Value;
    //     }

    // }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     token = await AuthenticationStateProvider.GetTokenAsync();

    //     if (token != null)
    //     {
    //         var handler = new JwtSecurityTokenHandler();
    //         var jwt = handler.ReadJwtToken(token);

    //         userName = jwt.Claims.FirstOrDefault(u => u.Type == JwtRegisteredClaimNames.Name)?.Value;
    //         userId = jwt.Claims.FirstOrDefault(u => u.Type == JwtRegisteredClaimNames.Sub)?.Value;
    //     }
    // }

    private async Task TryLogout()
    {
        await AuthenticationStateProvider.LogoutAsync();
        Navigation.NavigateTo("/");
    }
}





