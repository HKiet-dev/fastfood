@page "/forgotpassword"
@using FrontEnd.Models
@using FrontEnd.Services.IService
@using Newtonsoft.Json
@rendermode InteractiveServer

<div class="container">
    <div class="card container">
        <div class="text-center card-header">
            <h2>Quên mật khẩu</h2>
        </div>
        <EditForm Model="model" OnValidSubmit="Submit" FormName="ForgotPasswordForm">
            <div class="mb-3">
                <label for="email" class="form-floating form-label">Email:</label>
                <InputText @bind-Value="model.Email" type="email" class="form-control"></InputText>
                <ValidationMessage For="() => model.Email"></ValidationMessage>
                <button type="submit" class="btn btn-primary form-control mt-2 mb-2"> Xác nhận </button>
                <button @onclick="BackToLogin" type="submit" class="btn btn-outline-secondary form-control mt-2 mb-2">
                    <i class="bi bi-arrow-left"></i> Quay lại đăng nhập 
                </button>
            </div>
            <DataAnnotationsValidator></DataAnnotationsValidator>
        </EditForm>
        @if (message == "gửi mail thành công")
        {
            <div class="alert alert-success container" role="alert">
                @message
            </div>
        }
        else if (message == "gửi mail thất bại")
        {
            <div class="alert alert-danger container" role="alert">
                @message
            </div>
        }
    </div>
</div>



@code {
    [Inject]
    private NavigationManager Navigation { get; set; }
    [Inject]
    private IAuthService AuthService { get; set; }
    private ForgotPasswordRequest model = new();
    private string message;


    private async Task Submit()
    {
        var response = await AuthService.ForgotPassword(model.Email);

        if (response.IsSuccess == true && response.Result != null)
        {
            var result = response.Result.ToString();

            message = result;
        }
        else
        {
            message = response.Result.ToString();
        }
    }

    private async Task BackToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
