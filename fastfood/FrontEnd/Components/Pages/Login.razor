@page "/login"
@using FrontEnd.Helper
@using FrontEnd.Models
@using FrontEnd.Services.IService
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Newtonsoft.Json
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@layout AccountLayoutPage
@rendermode InteractiveServer
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider Authentication

<link rel="stylesheet" href="~/login.css" />

<div class="full-height d-flex justify-content-center align-items-center">
    <div class="col-lg-4">
        <div class="container">
            <h3 class="text-center mb-4 text-white">Đăng nhập</h3>
            <EditForm Model="model" OnValidSubmit="HandleValidLoginModel" FormName="LoginForm">
                <div class="mb-3">
                    <label for="email" class="form-label text-white">Tài khoản</label>
                    <InputText @oninput="ClearMessage" @bind-Value="model.Username" type="text" class="form-control"></InputText>
                    <ValidationMessage For="() => model.Username"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label text-white">Mật khẩu</label>
                    <InputText @oninput="ClearMessage" @bind-Value="model.Password" type="password" class="form-control"></InputText>
                    <ValidationMessage For="() => model.Password"></ValidationMessage>
                </div>
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="rememberMe">
                    <label class="form-check-label text-white" for="rememberMe">Ghi nhớ mật khẩu</label>
                </div>
                <button type="submit" class="btn btn-primary btn-block mb-3">Đăng nhập</button>
                @* <ValidationSummary class="alert alert-danger list-unstyled p-1"></ValidationSummary> *@
                <DataAnnotationsValidator></DataAnnotationsValidator>
                @if (errorMessage != string.Empty)
                {
                    <div class="alert alert-danger" role="alert">
                        <span>@errorMessage</span>
                    </div>
                }
                
            </EditForm>
            <div class="text-center text-white">
                <p>Hoặc đăng nhập bằng</p>
                <!-- Google Login Button -->
                <button class="btn btn-outline-light btn-block" @onclick="() => GoogleLogin()">
                    <i class="fab fa-google"></i> Đăng nhập với Google
                </button>
            </div>
            <div class="text-center mt-3">
                <p class="text-white">
                    Bạn chưa có tài khoản?
                    <NavLink class="nav-link" href="register">
                        <button class="btn btn-primary">Đăng kí</button>
                    </NavLink>
                </p>
                
            </div>
        </div>
    </div>
</div>

<style>
    .full-height {
        height: 100vh;
    }
</style>

@code {
    private LoginRequestDto model = new();
    private string errorMessage = string.Empty;


    private async Task HandleValidLoginModel()
    {
        var loginAction = await Authentication.LoginAsync(model,string.Empty);

        if (loginAction == "Sai tài khoản hoặc mật khẩu")
        {
            errorMessage = loginAction;
        }
        else
        {
            var token = await Authentication.GetTokenAsync();
            var handler = new JwtSecurityTokenHandler();
            var jwt = handler.ReadJwtToken(token);
            var role = jwt.Claims.FirstOrDefault(u => u.Type == "role")?.Value;
            if (role == "CUSTOMER")
            {
                Navigation.NavigateTo("/");
                return;
            }
            else if (role == "ADMIN")
            {
                Navigation.NavigateTo("/usermanager");
                return;
            }
        }

    }

    private void ClearMessage()
    {
        errorMessage = string.Empty;
    }

    private void GoogleLogin()
    {
        Navigation.NavigateTo("https://localhost:7039/api/Auth/signin-google");
    }
}
